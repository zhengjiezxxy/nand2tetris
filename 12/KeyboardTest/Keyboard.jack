// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
      return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      return Memory.peek(24576);
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
      var char c;
      var char bakc;

      //wait input
      let c = 0;
      while(c = 0 )
      {
        let c = Keyboard.keyPressed();
      }

      let bakc = c;

      //wait to release key
      while(c > 0)
      {
        let c = Keyboard.keyPressed();
      }
  
      //output c
      do Output.printChar(bakc);

      return bakc;
    }


    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
      var String s;
      var char c; //current input char
       
      let s = String.new(1024); // 1024 character at most
      let c = Keyboard.readChar();
      while(~((c-128) = 0))
      {
        if(c = String.backSpace())  //129
        {
          if(~(s.length()= 0)) //string length is not zero backspace
          {
            do s.eraseLastChar();
            do Output.backSpace();
          }
        }
        else
        {
          do s.appendChar(c);
        }

        let c = Keyboard.readChar();
      }

      do Output.println();

      return s;

    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
      var String s;
      let s = Keyboard.readLine(message);
      return s.intValue();
    }
}
