class Math 
{

    static Array twoToThe;
    static int NUM_BITS;

    /** Initializes the library. */
    function void init() 
    {
        var int i;
        var int currentVal;
        let NUM_BITS = 16;
        let currentVal = 1;
        let twoToThe = Array.new(16);
        let i = 0;
        while(i < NUM_BITS)
        {
            let twoToThe[i] = currentVal;
            let currentVal = currentVal + currentVal;
        }
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) 
    {
        if (x < 0)
        {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) 
    {
        var int sum;
        var int shiftedX;
        var int i;
        let i = 0;
        let shiftedX = x;
        let sum = 0;
        while(i < NUM_BITS)
        {
            if(~(Math.bit(i, y) = 0))
            {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
        }
        return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
        return 0;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        return 0;
    }

    /** Returns the greater number. */
    function int max(int a, int b) 
    {
        if(a > b)
        {
            return a;
        }
        return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) 
    {
        if(a < b)
        {
            return a;
        }
        return b;
    }
    
    /** Returns the bit in the bitIndex of the provided number */
    function int bit(int num, int bitIndex)
    {
        return num & twoToThe[bitIndex]; 
    }
}